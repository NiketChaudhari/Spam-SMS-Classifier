{"version":3,"sources":["App.js","index.js"],"names":["axios","require","App","useState","msgType","setMsgType","inputMsg","setInputMsg","msgColor","setMsgColor","hoverColor","setHoverColor","style","display","flexDirection","minHeight","padding","backgroundImage","flex","fontSize","marginTop","textAlign","color","fontWeight","fontFamily","textShadow","border","borderRadius","WebkitTextFillColor","marginInline","wordWrap","wordBreak","overflow","whiteSpace","boxShadow","type","placeholder","onChange","e","target","value","console","log","margin","cursor","backgroundColor","onMouseOver","onMouseOut","onClick","getData","a","get","res","data","ReactDOM","render","document","getElementById"],"mappings":"+NACMA,EAAQC,EAAQ,IA0IPC,EAvIH,WAEV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAwCA,OACE,sBAAKC,MAAO,CACVC,QAAS,OACTC,cAAe,SACfC,UAAW,OACXC,QAAS,OACTC,gBAAiB,gDALnB,UAQE,qBAAKL,MAAO,CACVM,KAAM,EACNC,SAAU,GACVC,UAAW,OACXC,UAAW,SACXC,MAAO,QACPC,WAAY,OACZC,WAAY,QACZC,WAAY,sCARd,iCAaA,0BACEb,MAAO,CACLM,KAAM,EACNQ,OAAQ,kBACRL,UAAW,SACXF,SAAU,GACVQ,aAAc,GACdL,MAAO,QACPM,oBAAqB,QACrBC,aAAc,MACdC,SAAW,aACXC,UAAY,YACZC,SAAS,OACTC,WAAW,WACXC,UAAW,cAEbC,KAAK,OACLC,YAAY,qBACZC,SAlDkB,SAACC,GACvB/B,EAAY+B,EAAEC,OAAOC,OACrBnC,EAAW,IAEXoC,QAAQC,IAAIJ,EAAEC,OAAOC,UAkDnB,wBACE5B,MAAO,CACLM,KAAM,EACNyB,OAAQ,GACRd,aAAc,MACdV,SAAU,GACVO,OAAQ,kBACRC,aAAc,OACdiB,OAAQ,UACRC,gBAAmBnC,EAAa,QAAQ,aACxCY,MAAQZ,EAAa,QAAQ,OAC7Ba,WAAY,OACZC,WAAY,QACZU,UAAW,cAEbY,YAAa,WAAOnC,GAAc,IAClCoC,WAAY,WAAOpC,GAAc,IAEjCqC,QAjGc,WAElB,GAAgB,KAAb1C,EACDD,EAAW,8BACXI,EAAY,WAET,CACH,IAAMwC,EAAO,uCAAG,gCAAAC,EAAA,sEACIlD,EAAMmD,IAAN,2DAA8D7C,IADlE,cACR8C,EADQ,gBAESA,EAFT,gBAENC,EAFM,EAENA,KACRhD,EAAWgD,GAGT5C,EADW,SAAT4C,EACU,MAGA,SATA,2CAAH,qDAabJ,MA2DA,oBAuBA,qBACErC,MAAO,CACLM,KAAM,EACNyB,OAAQ,GACRxB,SAAU,GACVE,UAAW,SACXE,WAAa,OACbD,MAAqB,QAAbd,EAAsB,MAAQ,SAP1C,SAUGJ,IAIH,qBACEQ,MAAO,CAAEM,KAAM,S,MC9HvBoC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.7b3f6228.chunk.js","sourcesContent":["import React, { useState } from 'react';\nconst axios = require('axios');\n\n\nconst App = () => {\n\n  const [msgType, setMsgType] = useState(\"\")\n  const [inputMsg, setInputMsg] = useState(\"\")\n  const [msgColor, setMsgColor] = useState(\"\")\n\n  const [hoverColor, setHoverColor] = useState(true)\n  \n\n\n\n  const btn_clicked = () => {\n\n    if(inputMsg === \"\") {\n      setMsgType(\"Text should not be empty !\")\n      setMsgColor(\"Red\")\n    }\n    else {\n      const getData = async () => {\n        const res = await axios.get(`https://spam-sms-classifier-ap.herokuapp.com/sms/${inputMsg}`);\n        const { data } = await res;\n        setMsgType(data)\n\n        if (data === \"Spam\") {\n          setMsgColor(\"Red\")\n        }\n        else {\n          setMsgColor(\"Green\")\n        }\n      }\n\n      getData()\n    }\n  }\n\n\n  const inputMsgChanged = (e) => {\n    setInputMsg(e.target.value)\n    setMsgType(\"\")\n\n    console.log(e.target.value)\n\n\n  }\n\n\n  return (\n    <div style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      minHeight: \"95vh\",\n      padding: \"20px\",\n      backgroundImage: \"linear-gradient(to right, #EFB5C0 , #EAC4CC)\"\n    }}>\n\n      <div style={{\n        flex: 1,\n        fontSize: 60,\n        marginTop: \"50px\",\n        textAlign: \"center\",\n        color: \"Green\",\n        fontWeight: \"bold\",\n        fontFamily: \"serif\",\n        textShadow: \"2px 2px 5px white, 0 0 5px #0000FF\"\n      }}>\n        Spam SMS Classifier\n      </div>\n\n      <textarea\n        style={{\n          flex: 5,\n          border: \"3px solid green\",\n          textAlign: \"center\",\n          fontSize: 30,\n          borderRadius: 20,\n          color: \"Green\",\n          WebkitTextFillColor: \"Green\",\n          marginInline: \"15%\",\n          wordWrap : \"break-word\",\n          wordBreak : \"break-all\",\n          overflow:\"auto\",\n          whiteSpace:\"pre-wrap\",\n          boxShadow: \"0 5px #999\"\n        }}\n        type=\"text\"\n        placeholder=\"Enter your text...\"\n        onChange={inputMsgChanged}\n      />\n\n\n      <button\n        style={{\n          flex: 1,\n          margin: 20,\n          marginInline: \"30%\",\n          fontSize: 25,\n          border: \"3px solid green\",\n          borderRadius: \"15px\",\n          cursor: \"pointer\",\n          backgroundColor : (hoverColor ? \"white\":\"lightgreen\"),\n          color: (hoverColor ? \"Green\":\"blue\"),\n          fontWeight: \"bold\",\n          fontFamily: \"serif\",\n          boxShadow: \"0 5px #999\"\n        }}\n        onMouseOver={() => {setHoverColor(false)}}\n        onMouseOut={() => {setHoverColor(true)}}\n\n        onClick={btn_clicked}\n      >\n        Detect\n      </button>\n\n      <div\n        style={{\n          flex: 1,\n          margin: 20,\n          fontSize: 45,\n          textAlign: \"center\",\n          fontWeight : 'bold',\n          color: (msgColor === \"Red\") ? 'Red' : \"Green\"\n        }}\n      >\n        {msgType}\n      </div>\n\n\n      <div\n        style={{ flex: 4 }}>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}